
print('Exercitiul 1:')
print("Site-ul urmator are titlu?")
from urllib import request
url = "https://www.emag.ro"
html = request.urlopen(url).read()

from bs4 import BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')
title = soup.find('title')

if title  == 0:
    print('Pagina nu are titlu!')
else: print('Pagina are titlu!\n')

#print(title)
#print(title.string)
input("Press ENTER to continue")
print('Exercitiul 2: ')
print("Care este titlul paginei?")


from urllib.request import urlopen
from urllib.error import HTTPError

def getTitle(url):
    try:
        html = urlopen(url)
    except HTTPError:
        return None
    try:
        this = BeautifulSoup(html.read(), "html.parser")
        title = this.body.h1
    except AttributeError:
        return None

    return title

    title = getTitle(url)
    if title == None:
        return "Title could not be found"
    else:
        return title
print('Titlul (h1 tag) din pagina google: ', getTitle("https://www.google.com/"))
print('Titlul (h1 tag) din pagina example: ', getTitle("http://www.example.com/"))
input("\nPress ENTER to continue")
print('Exercitiul 3:')
print("Extrage top 250 filme de pe IMDB, incluzand numele titlului, lansarea sa, numele directorului si actorii principali")
input('Press ENTER to continue')
print('Top 250 filme a IMDB, (Numele filmului, lansarea initiala, numele directorului si actorii principali):')
import re
import requests

url = 'http://www.imdb.com/chart/top'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

movies = soup.select('td.titleColumn')
links = [a.attrs.get('href') for a in soup.select('td.titleColumn a')]
crew = [a.attrs.get('title') for a in soup.select('td.titleColumn a')]
ratings = [b.attrs.get('data-value') for b in soup.select('td.posterColumn span[name=ir]')]
votes = [b.attrs.get('data-value') for b in soup.select('td.ratingColumn strong')]
imdb = []
for index in range(0, len(movies)):
    movie_string = movies[index].get_text()
    movie = (' '.join(movie_string.split()).replace('.', ''))
    movie_title = movie[len(str(index)) + 1:-7]
    year = re.search('\((.*?)\)', movie_string).group(1)
    place = movie[:len(str(index)) - (len(movie))]
    data = {"movie_title": movie_title,
            "year": year,
            "place": place,
            "star_cast": crew[index],
            "rating": ratings[index],
            "vote": votes[index],
            "link": links[index]}
    imdb.append(data)

for item in imdb:
    print(item['place'], '-', item['movie_title'], '(' + item['year'] + ') -', 'Starring:', item['star_cast'])

input('Press ENTER to exit')

